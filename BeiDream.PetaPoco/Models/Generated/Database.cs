



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Sys`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=ZHAOLIANG-PC\SQLEXPRESS;Initial Catalog=Zephyr.Sys;User ID=sa;password=**zapped**;Pooling=False`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace PetaPocoORM
{

	public partial class PetaPocoHelper : Database
	{
		public PetaPocoHelper() 
			: base("Sys")
		{
			CommonConstruct();
		}

		public PetaPocoHelper(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PetaPocoHelper GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PetaPocoHelper GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PetaPocoHelper();
        }

		[ThreadStatic] static PetaPocoHelper _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static PetaPocoHelper repo { get { return PetaPocoHelper.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("sys_parameter")]


	[PrimaryKey("ParamCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_parameter : PetaPocoHelper.Record<sys_parameter>  
    {



		[Column] public string ParamCode { get; set; }





		[Column] public string ParamValue { get; set; }





		[Column] public bool? IsUserEditable { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_role")]


	[PrimaryKey("RoleCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_role : PetaPocoHelper.Record<sys_role>  
    {



		[Column] public string RoleCode { get; set; }





		[Column] public string RoleSeq { get; set; }





		[Column] public string RoleName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_roleMenuMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_roleMenuMap : PetaPocoHelper.Record<sys_roleMenuMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string RoleCode { get; set; }





		[Column] public string MenuCode { get; set; }



	}

    
	[TableName("sys_loginHistory")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_loginHistory : PetaPocoHelper.Record<sys_loginHistory>  
    {



		[Column] public int ID { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string HostName { get; set; }





		[Column] public string HostIP { get; set; }





		[Column] public string LoginCity { get; set; }





		[Column] public DateTime? LoginDate { get; set; }



	}

    
	[TableName("sys_userOrganizeMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_userOrganizeMap : PetaPocoHelper.Record<sys_userOrganizeMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string OrganizeCode { get; set; }





		[Column] public string UserCode { get; set; }



	}

    
	[TableName("sys_userRoleMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_userRoleMap : PetaPocoHelper.Record<sys_userRoleMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string RoleCode { get; set; }



	}

    
	[TableName("sys_code")]


	[PrimaryKey("Code", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_code : PetaPocoHelper.Record<sys_code>  
    {



		[Column] public string Code { get; set; }





		[Column] public string Value { get; set; }





		[Column] public string Text { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string Seq { get; set; }





		[Column] public bool? IsEnable { get; set; }





		[Column] public bool? IsDefault { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string CodeTypeName { get; set; }





		[Column] public string CodeType { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_log")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_log : PetaPocoHelper.Record<sys_log>  
    {



		[Column] public int ID { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string Position { get; set; }





		[Column] public string Target { get; set; }





		[Column] public string Type { get; set; }





		[Column] public string Message { get; set; }





		[Column] public DateTime? Date { get; set; }



	}

    
	[TableName("sys_user")]


	[PrimaryKey("UserCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_user : PetaPocoHelper.Record<sys_user>  
    {



		[Column] public string UserCode { get; set; }





		[Column] public string UserSeq { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string Password { get; set; }





		[Column] public string RoleName { get; set; }





		[Column] public string OrganizeName { get; set; }





		[Column] public string ConfigJSON { get; set; }





		[Column] public bool? IsEnable { get; set; }





		[Column] public int? LoginCount { get; set; }





		[Column] public DateTime? LastLoginDate { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_menuButtonMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_menuButtonMap : PetaPocoHelper.Record<sys_menuButtonMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string MenuCode { get; set; }





		[Column] public string ButtonCode { get; set; }



	}

    
	[TableName("sys_roleMenuButtonMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_roleMenuButtonMap : PetaPocoHelper.Record<sys_roleMenuButtonMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string RoleCode { get; set; }





		[Column] public string MenuCode { get; set; }





		[Column] public string ButtonCode { get; set; }



	}

    
	[TableName("sys_button")]


	[PrimaryKey("ButtonCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_button : PetaPocoHelper.Record<sys_button>  
    {



		[Column] public string ButtonCode { get; set; }





		[Column] public string ButtonName { get; set; }





		[Column] public int? ButtonSeq { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string ButtonIcon { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_permission")]


	[PrimaryKey("PermissionCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_permission : PetaPocoHelper.Record<sys_permission>  
    {



		[Column] public string PermissionCode { get; set; }





		[Column] public string PermissionName { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_rolePermissionMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_rolePermissionMap : PetaPocoHelper.Record<sys_rolePermissionMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string RoleCode { get; set; }





		[Column] public string PermissionCode { get; set; }





		[Column] public bool? IsDefault { get; set; }



	}

    
	[TableName("sys_userSetting")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_userSetting : PetaPocoHelper.Record<sys_userSetting>  
    {



		[Column] public int ID { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string SettingCode { get; set; }





		[Column] public string SettingName { get; set; }





		[Column] public string SettingValue { get; set; }





		[Column] public string Description { get; set; }



	}

    
	[TableName("sys_roleMenuColumnMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_roleMenuColumnMap : PetaPocoHelper.Record<sys_roleMenuColumnMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string RoleCode { get; set; }





		[Column] public string MenuCode { get; set; }





		[Column] public bool? IsReject { get; set; }





		[Column] public string FieldName { get; set; }



	}

    
	[TableName("sys_menu")]


	[PrimaryKey("MenuCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_menu : PetaPocoHelper.Record<sys_menu>  
    {



		[Column] public string MenuCode { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string MenuName { get; set; }





		[Column] public string URL { get; set; }





		[Column] public string IconClass { get; set; }





		[Column] public string IconURL { get; set; }





		[Column] public string MenuSeq { get; set; }





		[Column] public string Description { get; set; }





		[Column] public bool? IsVisible { get; set; }





		[Column] public bool? IsEnable { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_organizeRoleMap")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class sys_organizeRoleMap : PetaPocoHelper.Record<sys_organizeRoleMap>  
    {



		[Column] public int ID { get; set; }





		[Column] public string OrganizeCode { get; set; }





		[Column] public string RoleCode { get; set; }



	}

    
	[TableName("sys_codeType")]


	[PrimaryKey("CodeType", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_codeType : PetaPocoHelper.Record<sys_codeType>  
    {



		[Column] public string CodeType { get; set; }





		[Column] public string CodeTypeName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string Seq { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    
	[TableName("sys_organize")]


	[PrimaryKey("OrganizeCode", autoIncrement=false)]

	[ExplicitColumns]
    public partial class sys_organize : PetaPocoHelper.Record<sys_organize>  
    {



		[Column] public string OrganizeCode { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string OrganizeSeq { get; set; }





		[Column] public string OrganizeName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}


}



